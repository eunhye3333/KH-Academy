<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- DataSource 등록, DataSource : DB와 연결하는 정보를 가짐 -->
	<!-- BasicDataSource 객체를 만든 후 해당 객체를 이용하여 DB 등록  -->
	<!-- destroy-method : DB 연결을 한 후 닫아주는 용도로 사용할 메소드의 이름 지정 -->
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="SPRING"/>
		<property name="password" value="SPRING"/>
	</bean>
	
	<!-- SqlSession 등록 -->
	<!-- SqlSessionFactory -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- classpath: src의 resources 부분을 의미함 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- ref : dataSource를 참조하고 있음 -> 위에 있는 dataSource를 의미, id를 이용해 해당 정보를 참조하고, sqlSession을 만듦  -->
	</bean>
	
	<!-- SqlSession -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<!-- 생성자를 이용하여 객체를 만드는 방법 -->
		<constructor-arg ref="sqlSession"/>
	</bean>	
	
	<!-- 트랜잭션 관련 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
</beans>
