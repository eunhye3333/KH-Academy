-- 1. 70년대 생(1970~1979) 중 여자이면서 전씨인 사원의 이름과 주민번호, 부서 명, 직급 조회
-- 오라클
SELECT EMP_NAME, EMP_NO, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE E, DEPARTMENT, JOB J
WHERE DEPT_CODE = DEPT_ID
      AND E.JOB_CODE = J.JOB_CODE
      AND SUBSTR(EMP_NO, 1, 2) BETWEEN 70 AND 79
      AND EMP_NAME LIKE '전%';

-- ANSI
SELECT EMP_NAME, EMP_NO, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
     JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
     JOIN JOB USING(JOB_CODE)
WHERE SUBSTR(EMP_NO, 1, 2) BETWEEN 70 AND 79
      AND EMP_NAME LIKE '전%';

-- 2. 나이 상 가장 막내의 사원 코드, 사원 명, 나이, 부서 명, 직급 명 조회
-- 오라클
SELECT EMP_ID, EMP_NAME, TO_CHAR(SYSDATE, '"1"YY') -  SUBSTR(EMP_NO, 1, 2) 나이, 
       DEPT_TITLE, JOB_NAME
FROM EMPLOYEE E, DEPARTMENT, JOB J
WHERE DEPT_CODE = DEPT_ID
      AND E.JOB_CODE = J.JOB_CODE
      AND SUBSTR(EMP_NO, 1, 2) = (SELECT MAX(SUBSTR(EMP_NO, 1, 2)) FROM EMPLOYEE);

-- ANSI
SELECT EMP_ID, EMP_NAME, TO_CHAR(SYSDATE, '"1"YY') -  SUBSTR(EMP_NO, 1, 2) 나이, 
       DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
     JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
     JOIN JOB USING(JOB_CODE)
WHERE SUBSTR(EMP_NO, 1, 2) = (SELECT MAX(SUBSTR(EMP_NO, 1, 2)) FROM EMPLOYEE);

-- 3. 이름에 ‘형’이 들어가는 사원의 사원 코드, 사원 명, 직급 조회
-- 오라클
SELECT EMP_ID, EMP_NAME, JOB_NAME
FROM EMPLOYEE E, JOB J
WHERE E.JOB_CODE = J. JOB_CODE
      AND EMP_NAME LIKE '%형%';

-- ANSI
SELECT EMP_ID, EMP_NAME, JOB_NAME
FROM EMPLOYEE
     JOIN JOB USING(JOB_CODE)
WHERE EMP_NAME LIKE '%형%';

-- 4. 부서코드가 D5이거나 D6인 사원의 사원 명, 직급 명, 부서 코드, 부서 명 조회
-- 오라클
SELECT EMP_NAME, JOB_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE E, JOB J, DEPARTMENT
WHERE E.JOB_CODE = J. JOB_CODE
      AND DEPT_CODE = DEPT_ID
      AND DEPT_CODE IN ('D5', 'D6');

-- ANSI
SELECT EMP_NAME, JOB_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE
     JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
     JOIN JOB USING(JOB_CODE)
WHERE DEPT_CODE IN ('D5', 'D6');

-- 5. 보너스를 받는 사원의 사원 명, 부서 명, 지역 명 조회
-- 오라클
SELECT EMP_NAME, BONUS, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE, DEPARTMENT, LOCATION
WHERE DEPT_CODE = DEPT_ID
      AND LOCATION_ID = LOCAL_CODE
      AND BONUS IS NOT NULL;

-- ANSI
SELECT EMP_NAME, BONUS, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE
     JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
     JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE)
WHERE BONUS IS NOT NULL;

-- 6. 사원 명, 직급 명, 부서 명, 지역 명 조회
-- 오라클
SELECT EMP_NAME, JOB_NAME, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE E, JOB J, DEPARTMENT, LOCATION
WHERE E.JOB_CODE = J.JOB_CODE
      AND DEPT_CODE = DEPT_ID
      AND LOCATION_ID = LOCAL_CODE;

-- ANSI
SELECT EMP_NAME, JOB_NAME, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE
     JOIN JOB USING(JOB_CODE)
     JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
     JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE);

-- 7. 한국이나 일본에서 근무 중인 사원의 사원 명, 부서 명, 지역 명, 국가 명 조회
-- 오라클
SELECT EMP_NAME, DEPT_TITLE, LOCAL_NAME,
       CASE WHEN NATIONAL_CODE = 'KO' THEN '한국'
            ELSE '일본' 
       END "국가 명"
FROM EMPLOYEE, DEPARTMENT, LOCATION
WHERE DEPT_CODE = DEPT_ID
      AND LOCATION_ID = LOCAL_CODE
      AND NATIONAL_CODE IN ('KO', 'JP');

-- ANSI
SELECT EMP_NAME, DEPT_TITLE, LOCAL_NAME,
       CASE WHEN NATIONAL_CODE = 'KO' THEN '한국'
            ELSE '일본' 
       END "국가 명"
FROM EMPLOYEE
     JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
     JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE)
WHERE NATIONAL_CODE IN ('KO', 'JP');

-- 8. 한 사원과 같은 부서에서 일하는 사원의 이름 조회
SELECT E.EMP_NAME, E.DEPT_CODE, EE.EMP_NAME
FROM EMPLOYEE E, EMPLOYEE EE
WHERE E.DEPT_CODE = EE.DEPT_CODE
      AND E.EMP_NAME != EE.EMP_NAME
ORDER BY 1;

-- 9. 보너스가 없고 직급 코드가 J4이거나 J7인 사원의 이름, 직급 명, 급여 조회(NVL 이용)
-- 오라클
SELECT EMP_NAME, JOB_NAME, NVL(BONUS, SALARY) 급여
FROM EMPLOYEE E, JOB J
WHERE E.JOB_CODE = J.JOB_CODE
      AND E.JOB_CODE IN ('J4', 'J7');
      
-- ANSI
SELECT EMP_NAME, JOB_NAME, NVL(BONUS, SALARY) 급여
FROM EMPLOYEE
     JOIN JOB USING(JOB_CODE)
WHERE JOB_CODE IN ('J4', 'J7');

-- 10. 보너스 포함한 연봉이 높은 5명의 사번, 이름, 부서 명, 직급, 입사일, 순위 조회
-- 오라클
SELECT EMP_ID, EMP_NAME, DEPT_TITLE, JOB_NAME, HIRE_DATE, ROWNUM
FROM (SELECT *
      FROM EMPLOYEE E, JOB J, DEPARTMENT
      WHERE E.JOB_CODE = J.JOB_CODE
            AND DEPT_CODE = DEPT_ID
      ORDER BY SALARY * (1 + NVL2(BONUS, BONUS, 0)) DESC)
WHERE ROWNUM <= 5;

-- ANSI
SELECT EMP_ID, EMP_NAME, DEPT_TITLE, JOB_NAME, HIRE_DATE, ROWNUM
FROM (SELECT *
      FROM EMPLOYEE
           JOIN JOB USING(JOB_CODE)
           JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
      ORDER BY SALARY * (1 + NVL2(BONUS, BONUS, 0)) DESC)
WHERE ROWNUM <= 5;

-- 11. 부서 별 급여 합계가 전체 급여 총 합의 20%보다 많은 부서의 부서 명, 부서 별 급여 합계 조회 
-- 11-1. JOIN과 HAVING 사용
SELECT DEPT_TITLE, SUM(SALARY)
FROM EMPLOYEE
     JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
GROUP BY DEPT_TITLE
HAVING SUM(SALARY) > (SELECT SUM(SALARY) * 0.2
                      FROM EMPLOYEE);

-- 11-2. 인라인 뷰 사용 
SELECT DEPT_TITLE, 급여
FROM (SELECT DEPT_TITLE, SUM(SALARY) 급여
      FROM EMPLOYEE, DEPARTMENT
      WHERE DEPT_CODE = DEPT_ID
      GROUP BY DEPT_TITLE)
WHERE 급여 > (SELECT SUM(SALARY) * 0.2
              FROM EMPLOYEE);

-- 11-3. WITH 사용
WITH TB AS (SELECT DEPT_TITLE, SUM(SALARY) 급여
              FROM EMPLOYEE, DEPARTMENT
              WHERE DEPT_CODE = DEPT_ID
              GROUP BY DEPT_TITLE)
SELECT DEPT_TITLE, 급여 FROM TB
WHERE 급여 > (SELECT SUM(SALARY) * 0.2
              FROM EMPLOYEE);

-- 12. 부서 명과 부서 별 급여 합계 조회
-- 오라클
SELECT DEPT_TITLE, SUM(SALARY)
FROM EMPLOYEE, DEPARTMENT
WHERE DEPT_CODE = DEPT_ID(+)
GROUP BY DEPT_TITLE;

-- ANSI
SELECT DEPT_TITLE, SUM(SALARY)
FROM EMPLOYEE
     LEFT JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
GROUP BY DEPT_TITLE;

-- 13. WITH를 이용하여 급여 합과 급여 평균 조회
-- 1)
WITH SAL AS (SELECT SUM(SALARY)
             FROM EMPLOYEE),
     SAL2 AS (SELECT AVG(SALARY)
              FROM EMPLOYEE)
SELECT *
FROM SAL
UNION 
SELECT *
FROM SAL2;

-- 2)
WITH SAL AS (SELECT SUM(SALARY), AVG(SALARY)
                    FROM EMPLOYEE)
SELECT *
FROM SAL;
