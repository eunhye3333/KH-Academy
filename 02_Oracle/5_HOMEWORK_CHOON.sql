-- 1. 학생 이름과 주소지 표시
SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS "주소지"
FROM TB_STUDENT
ORDER BY "학생 이름";

-- 2. 휴학 중인 학생들의 이름과 주민번호를 나이가 적은 순으로 출력
SELECT STUDENT_NAME, STUDENT_SSN
FROM (SELECT STUDENT_NAME, STUDENT_SSN, 
             TO_CHAR(SYSDATE, 'YYYY') - 
             CASE WHEN SUBSTR(STUDENT_SSN, 1, 2) <= 21 THEN '20' || SUBSTR(STUDENT_SSN, 1, 2)
             ELSE '19' || SUBSTR(STUDENT_SSN, 1, 2)
             END 나이
      FROM TB_STUDENT
      WHERE ABSENCE_YN = 'Y'
      ORDER BY 나이);

-- 3. 주소가 강원도나 경기도인 학생 중 1900년대 학번을 가진 학생들의 이름과 학번, 주소 출력, 이름의 오름차순
SELECT STUDENT_NAME 학생이름, STUDENT_NO 학번, STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT
WHERE (STUDENT_ADDRESS LIKE '경기%' OR STUDENT_ADDRESS LIKE '강원%')
      AND STUDENT_NO LIKE '9%'
ORDER BY 학생이름;

-- 4. 법학과 교수 나이 많은 순 정렬
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM (SELECT PROFESSOR_NAME, PROFESSOR_SSN, SUBSTR(PROFESSOR_SSN, 1, 2) 생년
      FROM TB_PROFESSOR
           JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
      WHERE DEPARTMENT_NAME = '법학과'
      ORDER BY 생년);

SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                       FROM TB_DEPARTMENT
                       WHERE DEPARTMENT_NAME = '법학과')
ORDER BY SUBSTR(PROFESSOR_SSN, 1, 2);

-- 5. 2004년 2학기에 'C3118100' 과목을 수강한 학생들의 학번 조회
SELECT STUDENT_NO, TO_CHAR(POINT, '9.00') "POINT"
FROM TB_GRADE
WHERE TERM_NO = '200402' AND CLASS_NO = 'C3118100'
ORDER BY POINT DESC, STUDENT_NO ASC;

-- 6. 학생 번호, 학생 이름, 학과 이름을 학생 이름으로 오름차순 정렬
-- 오라클
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT S, TB_DEPARTMENT D
WHERE S.DEPARTMENT_NO = D.DEPARTMENT_NO
ORDER BY STUDENT_NAME;

-- ANSI
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
ORDER BY STUDENT_NAME;

-- 7. 과목 이름과 학과 이름 출력
-- 오라클
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS C, TB_DEPARTMENT D
WHERE C.DEPARTMENT_NO = D.DEPARTMENT_NO;

-- ANSI
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);

-- 8. 과목 이릅과 교수 이름 출력
-- 오라클
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS C, TB_PROFESSOR P, TB_CLASS_PROFESSOR CP
WHERE C.CLASS_NO = CP.CLASS_NO
      AND P.PROFESSOR_NO = CP.PROFESSOR_NO;

-- ANSI
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
     JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
     JOIN TB_PROFESSOR USING(PROFESSOR_NO);

-- 9. 8번의 결과 중 '인문사회' 계열인 교수의 이름 출력
-- 오라클
SELECT CLASS_NAME, PROFESSOR_NAME
      FROM TB_CLASS C, TB_PROFESSOR P, TB_CLASS_PROFESSOR CP, TB_DEPARTMENT D
      WHERE C.CLASS_NO = CP.CLASS_NO
            AND P.PROFESSOR_NO = CP.PROFESSOR_NO
            AND C.DEPARTMENT_NO = D.DEPARTMENT_NO
            AND CATEGORY = '인문사회';

-- ANSI
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_DEPARTMENT
     JOIN TB_CLASS USING(DEPARTMENT_NO)
     JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
     JOIN TB_PROFESSOR USING(PROFESSOR_NO)
WHERE CATEGORY = '인문사회';

-- 10. '음악학과' 학생들의 학번, 학생 이름, 전체 평점
-- 오라클
SELECT S.STUDENT_NO "학번", STUDENT_NAME "학생 이름", ROUND(AVG(POINT), 1) "전체 평점"
FROM TB_STUDENT S, TB_GRADE G, TB_DEPARTMENT D
WHERE S.STUDENT_NO = G.STUDENT_NO
      AND S.DEPARTMENT_NO = D.DEPARTMENT_NO
      AND DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NAME, S.STUDENT_NO;

-- ANSI
SELECT STUDENT_NO "학번", STUDENT_NAME "학생 이름", ROUND(AVG(POINT), 1) "전체 평점"
FROM TB_STUDENT
     JOIN TB_GRADE USING(STUDENT_NO)
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NAME, STUDENT_NO;

-- 11. 학번이 A313047인 학생의 학과 이름, 학생 이름, 지도교수 이름 출력
-- 오라클
SELECT DEPARTMENT_NAME 학과이름, STUDENT_NAME 학생이름, PROFESSOR_NAME 지도교수이름
FROM TB_DEPARTMENT D, TB_STUDENT S, TB_PROFESSOR 
WHERE D.DEPARTMENT_NO = S.DEPARTMENT_NO
      AND COACH_PROFESSOR_NO = PROFESSOR_NO
      AND STUDENT_NO = 'A313047';

-- ANSI
SELECT DEPARTMENT_NAME 학과이름, STUDENT_NAME 학생이름, PROFESSOR_NAME 지도교수이름
FROM TB_DEPARTMENT
     JOIN TB_STUDENT USING(DEPARTMENT_NO)
     JOIN TB_PROFESSOR ON(COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE STUDENT_NO = 'A313047';

-- 12. 2007년도에 '인간관계론' 수업을 수강한 학생을 찾아 학생 이름과 수강 학기 표시
-- 오라클
SELECT STUDENT_NAME, TERM_NO
FROM TB_STUDENT S, TB_GRADE G
WHERE S.STUDENT_NO = G.STUDENT_NO
      AND SUBSTR(TERM_NO, 1, 4) = '2007'
      AND CLASS_NO = (SELECT CLASS_NO
                      FROM TB_CLASS
                      WHERE CLASS_NAME = '인간관계론');

-- ANSI
SELECT STUDENT_NAME, TERM_NO
FROM TB_STUDENT 
     JOIN TB_GRADE USING(STUDENT_NO)
WHERE SUBSTR(TERM_NO, 1, 4) = '2007'
      AND CLASS_NO = (SELECT CLASS_NO
                      FROM TB_CLASS
                      WHERE CLASS_NAME = '인간관계론');

-- 13. 예체능 계열 과목 중 과목 담당 교수를 배정받지 못한 과목 출력
-- 오라클
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS C, TB_DEPARTMENT D
WHERE D.DEPARTMENT_NO = C.DEPARTMENT_NO
      AND CLASS_NO NOT IN (SELECT CLASS_NO
                           FROM TB_CLASS_PROFESSOR)
      AND CATEGORY = '예체능';

-- ANSI
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS 
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE CLASS_NO NOT IN (SELECT CLASS_NO
                           FROM TB_CLASS_PROFESSOR)
      AND CATEGORY = '예체능';

-- 14. 서반아어학과 학생의 이름과 지도교수 이름 출력, 지도교수가 없는 경우 "지도교수 미지정"으로 출력
-- 오라클
SELECT STUDENT_NAME, NVL2(COACH_PROFESSOR_NO, PROFESSOR_NAME, '지도교수 미지정')
FROM TB_STUDENT, TB_PROFESSOR 
WHERE COACH_PROFESSOR_NO = PROFESSOR_NO(+)
      AND TB_STUDENT.DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                                      FROM TB_DEPARTMENT
                                      WHERE DEPARTMENT_NAME = '서반아어학과');

-- ANSI
SELECT STUDENT_NAME, NVL2(COACH_PROFESSOR_NO, PROFESSOR_NAME, '지도교수 미지정')
FROM TB_STUDENT
     LEFT JOIN TB_PROFESSOR ON(COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE TB_STUDENT.DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                                  FROM TB_DEPARTMENT
                                  WHERE DEPARTMENT_NAME = '서반아어학과');
                       
-- 15. 휴학생이 아닌 학생 중 평점 4.0 이상인 학생의 학번, 이름, 학과 이름, 평점 출력
-- 오라클
SELECT 학번, 이름, "학과 이름", 평점
FROM (SELECT S.STUDENT_NO 학번, STUDENT_NAME 이름, DEPARTMENT_NAME "학과 이름", AVG(POINT) 평점
      FROM TB_STUDENT S, TB_DEPARTMENT D, TB_GRADE G
      WHERE S.DEPARTMENT_NO = D.DEPARTMENT_NO
            AND S.STUDENT_NO = G.STUDENT_NO
            AND ABSENCE_YN = 'N'
      GROUP BY S.STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME)
WHERE 평점 >= 4.0;

-- ANSI
SELECT 학번, 이름, "학과 이름", 평점
FROM (SELECT STUDENT_NO 학번, STUDENT_NAME 이름, DEPARTMENT_NAME "학과 이름", AVG(POINT) 평점
      FROM TB_DEPARTMENT
           JOIN TB_STUDENT USING(DEPARTMENT_NO)
           JOIN TB_GRADE USING(STUDENT_NO)
      WHERE ABSENCE_YN = 'N'
      GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME)
WHERE 평점 >= 4.0;

-- 16. 환경조경학과 전공 과목들의 과목 별 평점 출력
-- 오라클
SELECT C.CLASS_NO, CLASS_NAME, AVG(POINT)
FROM TB_CLASS C, TB_GRADE G, TB_DEPARTMENT D
WHERE C.CLASS_NO = G.CLASS_NO
      AND C.DEPARTMENT_NO = D.DEPARTMENT_NO
      AND DEPARTMENT_NAME = '환경조경학과'
GROUP BY C.CLASS_NO, CLASS_NAME;

-- ANSI
SELECT CLASS_NO, CLASS_NAME, AVG(POINT)
FROM TB_CLASS
     JOIN TB_GRADE USING(CLASS_NO)
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '환경조경학과'
GROUP BY CLASS_NO, CLASS_NAME;

-- 17. 최경희 학생과 같은 과 학생들의 이름과 주소 출력
SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                       FROM TB_STUDENT
                       WHERE STUDENT_NAME = '최경희');

-- 18. 국어국문학과에서 총 평점이 가장 높은 학생의 이름과 학번 출력
-- 오라클
SELECT STUDENT_NO, STUDENT_NAME
FROM (SELECT S.STUDENT_NO, STUDENT_NAME, AVG(POINT) 평점
      FROM TB_STUDENT S, TB_GRADE G, TB_DEPARTMENT D
      WHERE S.STUDENT_NO = G.STUDENT_NO
            AND S.DEPARTMENT_NO = D.DEPARTMENT_NO
            AND DEPARTMENT_NAME = '국어국문학과'
      GROUP BY S.STUDENT_NO, STUDENT_NAME
      ORDER BY 평점 DESC)
WHERE ROWNUM = 1;

-- ANSI
SELECT STUDENT_NO, STUDENT_NAME
FROM (SELECT STUDENT_NO, STUDENT_NAME, AVG(POINT) 평점
      FROM TB_STUDENT
           JOIN TB_GRADE USING(STUDENT_NO)
           JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
      WHERE DEPARTMENT_NAME = '국어국문학과'
      GROUP BY STUDENT_NO, STUDENT_NAME
      ORDER BY 평점 DESC)
WHERE ROWNUM = 1;

-- 19. 환경조경학과와 같은 계열의 학교 별 전공 과목 평점
-- 오라클
SELECT DEPARTMENT_NAME "계열 학과명", ROUND(AVG(POINT), 1) 전공평점
FROM TB_DEPARTMENT D, TB_CLASS C, TB_GRADE G
WHERE D.DEPARTMENT_NO = C.DEPARTMENT_NO
      AND C.CLASS_NO = G.CLASS_NO
      AND CATEGORY = (SELECT CATEGORY
                  FROM TB_DEPARTMENT
                  WHERE DEPARTMENT_NAME = '환경조경학과')
GROUP BY DEPARTMENT_NAME;

-- ANSI
SELECT DEPARTMENT_NAME "계열 학과명", ROUND(AVG(POINT), 1) 전공평점
FROM TB_DEPARTMENT 
     JOIN TB_CLASS USING(DEPARTMENT_NO)
     JOIN TB_GRADE USING(CLASS_NO)
WHERE CATEGORY = (SELECT CATEGORY
                  FROM TB_DEPARTMENT
                  WHERE DEPARTMENT_NAME = '환경조경학과')
GROUP BY DEPARTMENT_NAME;
                       