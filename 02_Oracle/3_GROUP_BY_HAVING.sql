/* 
5 : SELECT 컬럼명 AS 별칭, 계산식, 함수식
1 : FROM 참조할 테이블 명
2 : WHERE 컬럼명|함수식 비교연산자 비교값
3 : GROUP BY 그룹으로 묶을 컬럼명
4 : HAVING 그룹함수식 비교연산자 비교값
6 : ORDER BY 컬렴명|별칭|컬럼순번 정렬방식 (NULLS FIRST|LAST)
위에서부터 순차적으로 실행되는 것이 아님
*/

-- GROUP BY
SELECT DEPT_CODE, SUM(SALARY) -- 단일 그룹의 그룹 함수가 아닙니다 -> 행의 개수가 다름 (GROUP BY 없는 경우)
FROM EMPLOYEE
GROUP BY DEPT_CODE;

SELECT SUM(SALARY)
FROM EMPLOYEE
GROUP BY DEPT_CODE;
-- 실행 가능 그냥 DEPT_CODE를 같이 안 보여 주는 것

-- EMPLOYEE 테이블에서 부서 코드별 그룹을 지정하여 부서 코드, 그룹별 급여 합계, 그룹별 급여 평균(정수처리), 인원 수 조회
-- 부서코드 순으로 정렬
SELECT NVL(DEPT_CODE,'부서없음') 부서, SUM(SALARY) "급여 합계", FLOOR(AVG(SALARY)) "급여 평균", COUNT(*) "인원 수"
FROM EMPLOYEE
GROUP BY DEPT_CODE
ORDER BY DEPT_CODE;

-- EMPLOYEE 테이블에서 부서 코드와 보너스 받는 사원 수 조회하고 부서 코드 순으로 정렬
SELECT DEPT_CODE, COUNT(BONUS)
FROM EMPLOYEE
GROUP BY DEPT_CODE
ORDER BY DEPT_CODE;

-- EMPLOYEE 테이블에서 직급 코드, 보너스를 받는 사원의 수를 조회하여 직급코드 순으로 오름차순 정렬
SELECT JOB_CODE, COUNT(BONUS)
FROM EMPLOYEE
GROUP BY JOB_CODE
ORDER BY JOB_CODE ASC;

SELECT JOB_CODE, COUNT(BONUS)
FROM EMPLOYEE
WHERE BONUS IS NOT NULL -- 0인 경우를 제외하고 보고 싶다면 추가해주면 됨
GROUP BY JOB_CODE
ORDER BY JOB_CODE ASC;

-- EMPLOYEE 테이블에서 성별과 성별 별 급여 평균(정수 처리), 급여 합계, 인원 수를 조회하고 인원 수로 내림차순 정렬
SELECT DECODE(SUBSTR(EMP_NO, 8, 1), 1, '남', '여') 성별, 
        FLOOR(AVG(SALARY)) "급여 평균", 
        SUM(SALARY) "급여 합계", 
        COUNT(*) "인원 수"
FROM EMPLOYEE
GROUP BY SUBSTR(EMP_NO, 8, 1) -- 성별이라고 하는 별칭을 사용하면 인지 못 함
-- DECODE 자체를 넣어도 됨 DECODE(SUBSTR(EMP_NO, 8, 1), 1, '남', '여') 
ORDER BY "인원 수" DESC;

-- EMPLOYEE 테이블에서 부서 코드별로 같은 직급인 사원의 급여 합계 조회
SELECT DEPT_CODE, JOB_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY DEPT_CODE, JOB_CODE; -- 같은 부서, 같은 직급인 사람들끼리 묶임
-- 여러 개의 컬럼을 하나로 묶을 수 있음

-- HAVING 
-- 부서 코드와 급여 300만 이상인 직원의 그룹별 평균 급여 조회
-- WHERE 필요
SELECT DEPT_CODE, AVG(SALARY)
FROM EMPLOYEE
WHERE SALARY >= 3000000
GROUP BY DEPT_CODE;

-- 부서 코드와 급여 평균 300만 이상인 그룹 조회
-- HAVING 필요
SELECT DEPT_CODE, AVG(SALARY)
FROM EMPLOYEE
GROUP BY DEPT_CODE
HAVING AVG(SALARY) >= 3000000;

-- 부서 별 그룹의 급여 합계 중 900만을 초과하는 부서 코드와 급여 합계
SELECT DEPT_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY DEPT_CODE
HAVING SUM(SALARY) > 9000000;

-- 집계함수 ROLLUP과 CUBE
-- 그룹 별 산출한 결과 값을 집계하는 함수
SELECT JOB_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY ROLLUP(JOB_CODE) -- 행이 하나가 추가됨
ORDER BY JOB_CODE;

SELECT JOB_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY CUBE(JOB_CODE) 
ORDER BY JOB_CODE;
-- 결과는 위와 같음

-- ROLLUP : 그룹 별로 중간 집계처리를 하는 함수
-- 인자로 전달받은 그룹 중에서 가장 먼저 지정된 그룹으로 집계 진행
SELECT DEPT_CODE, JOB_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY ROLLUP(DEPT_CODE, JOB_CODE)
ORDER BY DEPT_CODE;

-- CUBE : 그룹 별로 중간 집계처리를 하는 함수
-- 인자로 전달받은 모든 그룹에 대한 집계 진행
SELECT DEPT_CODE, JOB_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY CUBE(DEPT_CODE, JOB_CODE)
ORDER BY DEPT_CODE;

-- 집합연산자
-- UNION : 합집합 (=OR)
-- INTERSECT : 교집합 (=AND)
-- UNION ALL : 합집합 + 교집합 (OR + AND)
-- MINUS : 차집합

-- UNION
-- 사번이 200번인 사원과 201번인 사원 조회
SELECT EMP_ID, EMP_NAME
FROM EMPLOYEE
WHERE EMP_ID = 200;
SELECT EMP_ID, EMP_NAME
FROM EMPLOYEE
WHERE EMP_ID = 201;

SELECT EMP_ID, EMP_NAME
FROM EMPLOYEE
WHERE EMP_ID = 200 OR EMP_ID = 201;

SELECT EMP_ID, EMP_NAME
FROM EMPLOYEE
WHERE EMP_ID = 200
UNION -- 묶어서 보기
SELECT EMP_ID, EMP_NAME
FROM EMPLOYEE
WHERE EMP_ID = 201;

-- DEPT_CODE가 D5이거나 급여가 300만원을 초과하는 직원의 사번, 이름, 부서코드, 급여 조회
SELECT EMP_ID, EMP_NAME, DEPT_CODE, SALARY
FROM EMPLOYEE
WHERE DEPT_CODE = 'D5' OR SALARY > 3000000;

SELECT EMP_ID, EMP_NAME, DEPT_CODE, SALARY
FROM EMPLOYEE
WHERE DEPT_CODE = 'D5'
UNION
SELECT EMP_ID, EMP_NAME, DEPT_CODE, SALARY
FROM EMPLOYEE
WHERE SALARY > 3000000;

-- INTERSECT
SELECT EMP_ID, EMP_NAME, DEPT_CODE, SALARY
FROM EMPLOYEE
WHERE DEPT_CODE = 'D5'
INTERSECT
SELECT EMP_ID, EMP_NAME, DEPT_CODE, SALARY
FROM EMPLOYEE
WHERE SALARY > 3000000;

SELECT EMP_ID, EMP_NAME, DEPT_CODE, SALARY
FROM EMPLOYEE
WHERE DEPT_CODE = 'D5' AND SALARY > 3000000;

-- UNION ALL
-- 중복된 결과가 나옴 (INTERSECT + UNION)
SELECT EMP_ID, EMP_NAME, DEPT_CODE, SALARY
FROM EMPLOYEE
WHERE DEPT_CODE = 'D5'
UNION ALL
SELECT EMP_ID, EMP_NAME, DEPT_CODE, SALARY
FROM EMPLOYEE
WHERE SALARY > 3000000;

-- MINUS
SELECT EMP_ID, EMP_NAME, DEPT_CODE, SALARY
FROM EMPLOYEE
WHERE DEPT_CODE = 'D5'
MINUS
SELECT EMP_ID, EMP_NAME, DEPT_CODE, SALARY
FROM EMPLOYEE
WHERE SALARY > 3000000;
-- D5이면서(인 사람 중에) 300만원 이하로 버는 사람
-- 아래 부분은 NOT이 되기 때문

-- 컬럼의 개수가 달라서 결과 안 나옴
--SELECT EMP_ID, EMP_NAME, DEPT_CODE, SALARY, EMP_NO
--FROM EMPLOYEE
--WHERE DEPT_CODE = 'D5'
--UNION
--SELECT EMP_ID, EMP_NAME, DEPT_CODE, SALARY
--FROM EMPLOYEE
--WHERE SALARY > 3000000;

-- GROUPING SETS
-- 중복된 것들도 같이 나옴 UNION ALL처럼
SELECT DEPT_CODE, JOB_CODE, MANAGER_ID, FLOOR(AVG(SALARY))
FROM EMPLOYEE
GROUP BY GROUPING SETS ((DEPT_CODE, JOB_CODE, MANAGER_ID),
                          (DEPT_CODE, MANAGER_ID),
                          (JOB_CODE, MANAGER_ID)); -- 53

-- 이것을 다 합친 것이 위의 코드
SELECT DEPT_CODE, JOB_CODE, MANAGER_ID, FLOOR(AVG(SALARY))
FROM EMPLOYEE
GROUP BY DEPT_CODE, JOB_CODE, MANAGER_ID; -- 19

SELECT DEPT_CODE, MANAGER_ID, FLOOR(AVG(SALARY))
FROM EMPLOYEE
GROUP BY DEPT_CODE, MANAGER_ID; -- 15

SELECT JOB_CODE, MANAGER_ID, FLOOR(AVG(SALARY))
FROM EMPLOYEE
GROUP BY JOB_CODE, MANAGER_ID; -- 19

