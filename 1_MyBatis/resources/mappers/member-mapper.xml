<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">
<!-- Mapper를 하나만 사용한다는 보장이 없기 때문에 Mapper 구분을 위해  namespace를 지정함 -->
	
<!-- 	<select id="loginMember" parameterType="member.model.vo.Member" resultType="member.model.vo.Member"> -->
	<select id="loginMember" parameterType="member.model.vo.Member" resultMap="memberResultSet">
		select * 
		from member 
		where user_id = #{userId} 
			  and user_pwd = #{userPwd} 
			  and m_status = 'Y'
	</select>
	<!-- 
		id : 외부(DAO)에서 참조하기 위한 쿼리문의 고유 아이디(구분자)
		parameterType : 받아온 데이터의 타입을 명시해줌
						구문에 전달될 파라미터의 패키지 경로를 포함한 전체 클래스명 혹은 별칭
		resultType : 해당 select의 반환값 명시
					  쿼리 실행 후 조회된 결과를 자바에서 사용할 수 있게 하는 객체
					  컬럼명과 필드명이 완벽하게 일치하는 경우 사용 가능
					 ResultSet으로 결과를 받아와서 값을 하나씩 삽입하는 과정이 필요했는데, MyBatis를 사용하는 경우 알아서 형변환 후 넘겨줌
		resultMap : 쿼리 실행 후 조회된 결과를 자바에서 사용할 수 있게 하는 객체
				    DB의 컬럼과 클래스의 필드를 매핑시켜 줄 때 사용
	-->
	<!-- 
		가지고 와야 하는 부분에 #{필드명} 작성, 
		#은 mapper에서 유동적으로 사용 가능한 표현임, 
		EL($)을 사용하여도 인지하는 경우가 있으나, 오류 발생 가능성 존재 따라서 #을 쓰는 것이 좋음
		쿼리 뒤에 ; 붙이지 않음 
	-->
	
	<!-- DB의 컬럼과 클래스의 필드를 매핑시켜 줄 때 사용 -->
	<resultMap type="member.model.vo.Member" id="memberResultSet">
		<id column="USER_ID" property="userId"/> <!-- 기본 키 -->
		<result column="USER_PWD" property="userPwd"/> <!-- 일반 컬럼 -->
		<result column="USER_NAME" property="userName"/>
		<result column="NICKNAME" property="nickName"/> 
		<result column="EMAIL" property="email"/> 
		<result column="BIRTHDAY" property="birthDay"/> 
		<result column="GENDER" property="gender"/> 
		<result column="PHONE" property="phone"/> 
		<result column="ADDRESS" property="address"/> 
		<result column="ENROLL_DATE" property="enrollDate"/> 
		<result column="UPDATE_DATE" property="updateDate"/> 
		<result column="M_STATUS" property="mStatus"/> 
		<!-- 이름이 같은 부분을 작성하지 않는 경우에 오류 발생 가능 -->
	</resultMap>
	
	<insert id="insertMember" parameterType="member.model.vo.Member">
		INSERT INTO MEMBER
		VALUES(#{userId}, #{userPwd}, #{userName}, #{nickName}, #{email}, #{birthDay}, #{gender}, #{phone}, #{address}, SYSDATE, SYSDATE, DEFAULT)
		<!-- DML은 무조건 int 값을 반환하기 때문에 resultType을 넣지 않아도 됨 -> 넣으면 오류, resultType은 select에서만 넣음 -->
	</insert>
	
	<update id="updateMember" parameterType="Member">
		update member 
		set user_name=#{userName}, nickName=#{nickName}, email=#{email}, birthDay=#{birthDay}, gender=#{gender}, phone=#{phone}, address=#{address}, update_date=sysdate
		where user_id=#{userId}
	</update>
	
	<update id="updatePwd" parameterType="map">
		update member 
		set user_pwd=#{newPwd}
		where user_id=#{userId} and user_pwd=#{userPwd}
	</update>
	
	<update id="deleteMember" parameterType="string">
		update member
		set m_status='N'
		where user_id=#{userId}
	</update>
	
</mapper>