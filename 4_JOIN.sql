-- JOIN : 하나 이상의 테이블에서 데이터를 조회하기 위해 사용
--        결과는 하나의 Result Set로 나옴
SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE; -- ORA-00904: "DEPT_TITLE": 부적합한 식별자
-- EMP_ID, EMP_NAME, DEPT_CODE : EMPLOYEE에 있음
-- DEPT_TITLE : DEPARTMENT에 있음

SELECT EMP_ID, EMP_NAME, DEPT_CODE
FROM EMPLOYEE;
SELECT DEPT_TITLE
FROM DEPARTMENT;
-- 하나의 결과로는 나올 수 없어서 왔다갔다 하면서 봐야 됨

-- 내부 조인(INNER JOIN) : 조인의 기본
-- 연결되는 컬럼의 값이 일치하는 행들만 조인됨
-- 오라클 구문
SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT;
-- 결과가 207개나 나옴
-- 일치하는 것들만 가지고 오는 것이 아니라 모든 경우의 수를 다 보여줌
-- WHERE을 이용하여 일치하는 것만 보이게 해야 함
SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT
WHERE DEPT_CODE = DEPT_ID; -- DEPT_CODE가 NULL인 경우 제외됨(일치하는 경우가 없어서 가져올 수 없음)

-- ANSI 표준 구문
SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE
         JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID); -- WHERE절이 필요없음

-- 사번, 사원 명, 직급코드, 직급 명 조회
-- 오라클 구문
SELECT EMP_ID, EMP_NAME, JOB_CODE, JOB_NAME
FROM EMPLOYEE, JOB
WHERE JOB_CODE = JOB_CODE; -- ORA-00918: 열의 정의가 애매합니다
-- -> 컬럼명이 같아서 어느 테이블에 있는 컬럼인지 명확하지 않음

SELECT EMP_ID, EMP_NAME, EMPLOYEE.JOB_CODE, JOB_NAME -- 여기 있는 JOB_CODE도 명시해주어야 함
-- EMPLOYEE.JOB_CODE, JOB.JOB_CODE 둘 다 가능하지만 명시는 해주어야 함
FROM EMPLOYEE, JOB
WHERE EMPLOYEE.JOB_CODE = JOB.JOB_CODE; -- 어떤 테이블의 컬럼인지 알 수 있도록 테이블 이름 명시

-- 별칭 이용 가능
SELECT EMP_ID, EMP_NAME, E.JOB_CODE, JOB_NAME 
FROM EMPLOYEE E, JOB J
WHERE E.JOB_CODE = J.JOB_CODE;
-- 별칭을 사용하면 별칭으로 구분해줘야 함. EMPLOYEE.JOB_CODE 불가능(부적합한 식별자)

-- ANSI 표준 구문
SELECT EMP_ID, EMP_NAME, JOB_CODE, JOB_NAME
FROM EMPLOYEE
     JOIN JOB ON (JOB_CODE = JOB_CODE); -- 열의 정의가 애매합니다

SELECT EMP_ID, EMP_NAME, EMPLOYEE.JOB_CODE, JOB_NAME
FROM EMPLOYEE
     JOIN JOB ON (EMPLOYEE.JOB_CODE = JOB.JOB_CODE); 

-- 컬럼명이 같은 경우에는 ON을 사용하지 않음
-- USIGN 사용
SELECT EMP_ID, EMP_NAME, JOB_CODE, JOB_NAME
FROM EMPLOYEE
     JOIN JOB USING (JOB_CODE); 

-- 부서명과 해당 부서의 지역 명 조회
-- 오라클
SELECT DEPT_TITLE, LOCAL_NAME
FROM DEPARTMENT, LOCATION
WHERE LOCATION_ID = LOCAL_CODE;

SELECT EMP_ID, EMP_NAME, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE, DEPARTMENT, LOCATION
WHERE DEPT_CODE = DEPT_ID AND LOCATION_ID = LOCAL_CODE;

-- ANSI
SELECT DEPT_TITLE, LOCAL_NAME
FROM DEPARTMENT
     JOIN LOCATION ON(LOCATION_ID = LOCAL_CODE);

SELECT EMP_ID, EMP_NAME, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE 
     JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID) 
     JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE);

-- 외부조인 (OUTER JOIN)
-- LEFT [OUTER] JOIN : 왼 편에 기술된 테이블의 컬럼 수를 기준으로 JOIN
-- ANSI
SELECT EMP_NAME, DEPT_TITEL
FROM EMPLOYEE 
--   LEFT OUTER JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID); -- EMPLOYEE가 왼쪽에 있음 (EMPLOYEE 기준)
     LEFT JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID); -- OUTER 생략 가능
     
-- 오라클
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT
WHERE DEPT_CODE = DEPT_ID(+); -- 기준이 되는 곳이 아닌 맞춰주는 쪽에 (+)를 붙임

-- RIGHT [OUTER] JOIN : 오른 편에 기술된 테이블의 컬럼 수를 기준으로 JOIN
-- ANSI
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
     RIGHT /*OUTER*/ JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID);

-- 오라클
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT
WHERE DEPT_CODE(+) = DEPT_ID;

-- FULL [OUTER] JOIN : 두 테이블이 모두 기준이 되는 JOIN
-- ANSI
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
     FULL /*OUTER*/ JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID);

-- 오라클
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT
WHERE DEPT_CODE(+) = DEPT_ID(+); -- ORA-01468: outer-join된 테이블은 1개만 지정할 수 있습니다
-- FULL OUTER JOIN은 오라클로 표현 불가능

-- 다중 조인 : 순서 중요
-- 사번, 사원 명, 부서코드, 부서명, 지역명
-- 오라클
SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE, DEPARTMENT, LOCATION
WHERE DEPT_CODE = DEPT_ID
      AND LOCAL_CODE = LOCATION_ID;

SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE, LOCAL_NAME
FROM DEPARTMENT, LOCATION, EMPLOYEE -- 순서 바꿔도 문제 없음
WHERE LOCAL_CODE = LOCATION_ID -- 순서 바꿔도 문제 없음
      AND DEPT_CODE = DEPT_ID;

-- ANSI
SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE 
     JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
     JOIN LOCATION ON(LOCAL_CODE = LOCATION_ID);

SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE 
     JOIN LOCATION ON(LOCAL_CODE = LOCATION_ID)
     JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID); -- ORA-00904: "LOCATION_ID": 부적합한 식별자
     -- 한 번에 실행되는 게 아니라 순서대로 JOIN이 실행되는데 EMPLOYEE에는 LOCAL_CODE, LOCATION_ID 둘 다 존재하지 않음
     -- EMPLOYEE와 LOCATION 테이블의 연결점이 존재하지 않음

SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE, LOCAL_NAME
FROM DEPARTMENT 
     JOIN LOCATION ON(LOCAL_CODE = LOCATION_ID)
     JOIN EMPLOYEE ON(DEPT_CODE = DEPT_ID);
     
-- 직급이 대리이면서 아시아 지역에 근무하는 직원 조회
-- 사번, 이름, 직급명, 부서명, 근무 지역명, 급여
-- 오라클
SELECT EMP_ID, EMP_NAME, JOB_NAME, DEPT_TITLE, LOCAL_NAME, SALARY
FROM EMPLOYEE E, DEPARTMENT, JOB J, LOCATION
WHERE DEPT_CODE = DEPT_ID -- EMPLOYEE와 DEPARTMET 연결
      AND E.JOB_CODE = J.JOB_CODE -- EMPLOYEE와 JOB 연결
      AND LOCATION_ID = LOCAL_CODE -- DEPARTMENT와 LOCATION 연결
      AND JOB_NAME = '대리'
      AND LOCAL_NAME LIKE 'ASIA%';

-- ANSI
SELECT EMP_ID, EMP_NAME, JOB_NAME, DEPT_TITLE, LOCAL_NAME, SALARY
FROM EMPLOYEE
     JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
     JOIN JOB USING(JOB_CODE)
     JOIN LOCATION ON(LOCATION_ID = LOCAL_CODE)
WHERE JOB_NAME = '대리' 
      AND LOCAL_NAME LIKE 'ASIA%'; 


















